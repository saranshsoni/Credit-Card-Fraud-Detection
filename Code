import numpy as np
import pandas as pd

import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib import gridspec

data = pd.read_csv("creditcard.csv")

data.info()

data.describe()

data.shape

data['Class'].isnull().sum()
data

fraud = data[data['Class']==1]
valid = data[data['Class']==0]
outlierFraction=len(fraud)/float(len(valid))
print(outlierFraction)
print('fraud cases:',format(len(fraud)))
print('valid cases:',format(len(valid)))

print("amount of the fraud transaction")
fraud.Amount.describe()

print("amount of the valid transactions")
valid.Amount.describe()

corr_mat = data.corr()
fig = plt.figure(figsize=(20,20))
sns.heatmap(corr_mat, vmax = .8, square = True)
plt.show()

x=data.drop(['Class'],axis=1)
y=data['Class']
print(x.shape)
print(y.shape)

xData=x.values
yData=y.values

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(xData,yData,test_size=0.2,random_state=42)

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier()
model.fit(x_train,y_train)

pre= model.predict(x_test)

from sklearn.metrics import classification_report, accuracy_score , confusion_matrix

cm= confusion_matrix(y_test,pre)
plt.figure(figsize=(8, 6))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues")
plt.xlabel("Predicted Labels")
plt.ylabel("True Labels")
plt.title("Confusion Matrix")
plt.show()

accuracy_score(y_test,pre)

report = classification_report(y_test,pre)
print(report)
